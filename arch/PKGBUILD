# Maintainer: Jesse Steele <codes@jessesteele.com>
pkgname=gophersay-git
pkgver=1.0.0
pkgrel=1
pkgdesc="Gopher talkback written in Go for Linux"
url="https://github.com/JesseSteele/gophersay"
arch=('x86_64')     # Go is newer and may not work on older systems, so not 'any'
license=('GPL')
depends=('go')      # Depends on the 'go' package to build the binary
replaces=('gophersay' 'gophersay-tar')
source=("$_cmdname.repo::git+https://github.com/JesseSteele/$_cmdname.git") # gophersay.repo is just some name we can call it; '$_cmdname.repo::' could be omitted and we could use $_cmdname or 'gophersay'
sha256sums=('SKIP') # We skip the hash since are cloning from git, so security is already dealt with, so the hash won't properly check on a repo/directory anyway

# Custom variable "should" start with _
# Not necessary, but may keep code clean (can remove this, then $_cmdname replace with 'gophersay' everywhere)
_cmdname=gophersay

build() {
  # Get into the root, where our to-be-compiled files are
  cd $srcdir

  # Move our files into place from wherever we know they are inside the repo
  cp "$_cmdname.repo/$_cmdname.go" . # Because we used '$_cmdname.repo::' in source=
  #cp $_cmdname/$_cmdname.go .       # This would also work if we omit $_cmdname.repo::' from source=

  # Compile the Go binary
  go build -o "$_cmdname" "$_cmdname.go"
}

package() {
  install -Dm755 "$srcdir/$_cmdname" "$pkgdir/usr/bin/$_cmdname"
}